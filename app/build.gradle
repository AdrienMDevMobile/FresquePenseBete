apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.micheladrien.fresquerappel"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 20
        versionName "2.0"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.micheladrien.android.fresquerappel.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    
    /*
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/AL2.0'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude("META-INF/*.kotlin_module")
    }*/

    packagingOptions {
        // for JNA and JNA-platform
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
        // for byte-buddy
        exclude "META-INF/licenses/ASM"
        pickFirst "win32-x86-64/attach_hotspot_windows.dll"
        pickFirst "win32-x86/attach_hotspot_windows.dll"
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    def navigation_version = '2.3.1'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    implementation 'il.co.theblitz:observablecollections:1.4.2'
    def espressocore_version = '3.3.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressocore_version"
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    androidTestImplementation "android.arch.core:core-testing:$lifecycle_version"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    def mockito_version = '3.5.5' // For local unit tests on your development machine
    testImplementation "org.mockito:mockito-core:$mockito_version" // For instrumentation tests on Android devices and emulators
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"

    //https://square.github.io/leakcanary/fundamentals-how-leakcanary-works/
    //Retirer de la version sur le store
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    //Pour Android Test rules (ActivityTestRule)
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'

    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation_version"
    //https://github.com/android/android-test/issues/731
    implementation "androidx.fragment:fragment:1.3.0-alpha08"
    debugImplementation "androidx.fragment:fragment-testing:1.3.0-alpha08"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    // Activity KTX for viewModels()
    //implementation "androidx.activity:activity-ktx:1.1.0"
    // Hilt testing dependency
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    // Make Hilt generate code in the androidTest folder
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'

    //Test coroutine
    //testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    //androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0-RC'
    androidTestImplementation "io.mockk:mockk-android:1.11.0"
}